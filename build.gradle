plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "2.1.0"
	id "org.jetbrains.kotlin.plugin.serialization" version "2.1.0"
	id "com.google.devtools.ksp" version "2.1.0-1.0.28"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
	maven {url = "https://repo.essential.gg/repository/maven-public"}
	maven {
		name = "Team Resourceful Maven"
		url = "https://maven.teamresourceful.com/repository/maven-public/"
	}

	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}

	maven {
		url = "https://maven.azureaaron.net/releases"
		content {
			includeGroup "net.azureaaron"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// KSP processor
	ksp project(":event-processor")
	ksp "dev.zacsweers.autoservice:auto-service-ksp:1.1.0"
	implementation project(":event-processor")

//	modImplementation(include("xyz.meowing:vexel-1.21.5-fabric:${project.vexel_version}"))
	modImplementation(include("gg.essential:universalcraft-${project.minecraft_version}-fabric:${project.ucraft_version}"))
	modImplementation(include("gg.essential:elementa:${project.elementa_version}"))
	modImplementation(include("com.teamresourceful.resourcefulconfig:resourcefulconfig-fabric-${project.minecraft_version}:${project.rconfig_version}"))
	modImplementation(include("com.teamresourceful.resourcefulconfigkt:resourcefulconfigkt-fabric-${project.rconfig_kt_version}"))
	modImplementation(include("net.azureaaron:hm-api:1.0.1+1.21.2"))
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
	modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:${project.devauth_version}")

	implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3"
}

loom {
	runs {
		removeIf { it.name != "client" }
		named("client") {
			property("devauth.enabled", "true")
			vmArg("-ea")
			/*vmArg("-XX:+AllowEnhancedClassRedefinition")*/
			/*vmArg("-XX:HotswapAgent=external")
            vmArg("-javaagent:/home/ronald/Software-Packages/hotswap-agent-1.4.2-SNAPSHOT.jar")*/
		}
	}
	accessWidenerPath = file("src/main/resources/sbo-kotlin.accesswidener")
}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

kotlin {
	jvmToolchain(21)
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

sourceSets {
	main {
		java {
			srcDir("build/generated/ksp/main/kotlin")
		}
	}
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

tasks.named("compileKotlin") {
	dependsOn(tasks.named("kspKotlin"))
}